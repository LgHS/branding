%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.11.6 (Build 15G31) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 27 64
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 27 64
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0 0 0 sc
q
-251.5925 27.84 m
-258.90051 27.84 l
-258.90051 0 l
-268.29651 0 l
-268.29651 63.945 l
-258.90051 63.945 l
-258.90051 37.497002 l
-251.5925 37.497002 l
-251.5925 63.945 l
-242.1965 63.945 l
-242.1965 0 l
-251.5925 0 l
-251.5925 27.84 l
h
-232.9465 0 m
-223.28951 63.945 l
-211.8055 63.945 l
-202.1485 0 l
-211.28349 0 l
-213.0235 13.05 l
-222.0715 13.05 l
-223.81149 0 l
-232.9465 0 l
h
-217.0255 43.152 m
-217.2865 44.805 l
-217.8085 44.805 l
-218.0695 43.152 l
-220.76649 22.968 l
-214.32851 22.968 l
-217.0255 43.152 l
h
-168.45151 21.924 m
-168.45151 13.137 l
-168.5385 10.527 -169.0605 8.1780005 -170.0175 6.177 c
-170.80051 4.4369998 -172.01849 2.7839999 -173.7585 1.479 c
-175.4985 0.086999997 -177.8475 -0.69599998 -180.97951 -0.69599998 c
-184.1115 -0.69599998 -186.5475 0.086999997 -188.28751 1.479 c
-190.0275 2.7839999 -191.15849 4.4369998 -191.9415 6.177 c
-192.8985 8.1780005 -193.4205 10.527 -193.50751 13.137 c
-193.50751 50.807999 l
-193.4205 53.331001 -192.8985 55.68 -191.9415 57.681 c
-191.15849 59.421001 -190.0275 61.160999 -188.28751 62.466 c
-186.5475 63.771 -184.1115 64.640999 -180.97951 64.640999 c
-177.8475 64.640999 -175.4985 63.771 -173.7585 62.466 c
-172.01849 61.160999 -170.80051 59.421001 -170.0175 57.681 c
-169.0605 55.68 -168.5385 53.331001 -168.45151 50.807999 c
-168.45151 42.021 l
-177.23849 42.021 l
-177.23849 50.807999 l
-177.23849 52.548 -177.67351 53.765999 -178.63049 54.810001 c
-179.06551 55.244999 -179.8485 55.506001 -180.8055 55.506001 c
-182.4585 55.506001 -183.2415 54.287998 -183.6765 53.157001 c
-183.9375 52.460999 -184.02451 51.678001 -184.1115 50.807999 c
-184.1115 13.137 l
-184.02451 11.31 -183.5025 10.092 -182.63251 9.1350002 c
-182.19749 8.6999998 -181.5885 8.4390001 -180.8055 8.4390001 c
-178.8045 8.4390001 -178.0215 9.4829998 -177.5865 10.788 c
-177.3255 11.397 -177.23849 12.18 -177.23849 13.137 c
-177.23849 21.924 l
-168.45151 21.924 l
h
-148.5005 63.945 m
-148.5005 41.585999 l
-148.1525 41.585999 l
-147.7175 42.630001 l
-139.8875 63.945 l
-130.7525 63.945 l
-139.36549 42.890999 l
-129.62151 0 l
-138.7565 0 l
-145.28149 27.84 l
-145.5425 29.145 l
-145.8035 29.145 l
-146.3255 27.84 l
-148.5005 22.620001 l
-148.5005 0 l
-157.8965 0 l
-157.8965 63.945 l
-148.5005 63.945 l
h
-120.3715 63.945 m
-98.8825 63.945 l
-98.8825 54.287998 l
-110.9755 54.287998 l
-110.9755 37.497002 l
-102.2755 37.497002 l
-102.2755 27.231001 l
-110.9755 27.231001 l
-110.9755 9.6569996 l
-98.8825 9.6569996 l
-98.8825 0 l
-120.3715 0 l
-120.3715 63.945 l
h
-71.971497 0 m
-76.843498 26.969999 l
-79.366501 26.969999 l
-79.366501 0 l
-88.762497 0 l
-88.762497 63.945 l
-79.366501 63.945 l
-68.143501 63.945 -63.358501 57.594002 -63.358501 45.500999 c
-63.358501 39.150002 -65.011497 33.408001 -68.578499 30.972 c
-62.5755 0 l
-71.971497 0 l
h
-79.366501 35.669998 m
-78.061501 35.669998 -76.321503 35.844002 -74.929497 37.062 c
-73.537498 38.279999 -72.406502 40.629002 -72.406502 45.153 c
-72.406502 49.676998 -73.537498 52.112999 -74.929497 53.331001 c
-76.321503 54.549 -78.061501 54.636002 -79.366501 54.636002 c
-79.366501 35.669998 l
h
-18.584499 46.806 m
-18.584499 48.894001 -18.671499 51.243 -19.2805 53.07 c
-19.8895 54.810001 -20.8465 56.028 -22.3255 56.028 c
-24.761499 55.941002 -25.5445 53.417999 -25.5445 49.676998 c
-25.5445 47.501999 -24.5875 45.240002 -23.195499 42.804001 c
-21.803499 40.368 -19.9765 37.845001 -18.1495 35.147999 c
-15.9745 31.929001 -13.7995 28.622999 -12.1465 25.403999 c
-10.4935 22.184999 -9.3625002 18.879 -9.3625002 15.399 c
-9.3625002 11.136 -10.0585 7.1339998 -12.0595 4.1760001 c
-14.0605 1.2180001 -17.279499 -0.69599998 -22.4125 -0.69599998 c
-28.415501 -0.69599998 -31.8085 1.566 -33.7225 5.046 c
-35.636501 8.526 -36.071499 13.137 -36.071499 17.922001 c
-26.849501 18.792 l
-26.849501 16.094999 -26.762501 13.398 -26.0665 11.397 c
-25.4575 9.309 -24.4135 7.9169998 -22.4125 7.9169998 c
-19.6285 7.9169998 -18.584499 10.875 -18.584499 14.964 c
-18.584499 17.052 -19.6285 19.488001 -21.0205 22.011 c
-21.803499 23.229 -22.5865 24.534 -23.456499 25.839001 c
-25.283501 28.448999 -27.2845 31.407 -29.372499 34.625999 c
-31.460501 37.845001 -33.026501 41.151001 -33.983501 44.543999 c
-34.505501 46.196999 -34.766499 47.937 -34.766499 49.676998 c
-34.766499 53.157001 -33.983501 56.897999 -31.9825 59.769001 c
-29.981501 62.553001 -26.936501 64.554001 -22.4995 64.640999 c
-16.8445 64.727997 -13.5385 62.379002 -11.7115 58.986 c
-9.8844995 55.506001 -9.3625002 51.243 -9.3625002 47.675999 c
-18.584499 46.806 l
h
0.58350027 63.945 m
9.9794998 63.945 l
14.068501 63.945 18.157499 62.901001 21.289501 59.943001 c
24.421501 56.985001 26.509501 52.112999 26.509501 44.805 c
26.509501 37.497002 24.421501 32.712002 21.289501 29.754 c
18.157499 26.796 14.068501 25.577999 9.9794998 25.577999 c
9.9794998 0 l
0.58350027 0 l
0.58350027 63.945 l
h
9.9794998 35.147999 m
12.8505 35.147999 14.6775 35.669998 15.7215 37.148998 c
16.765501 38.541 17.026501 40.889999 17.026501 44.457001 c
17.026501 48.023998 16.765501 50.547001 15.7215 52.112999 c
14.6775 53.679001 12.8505 54.375 9.9794998 54.375 c
9.9794998 35.147999 l
h
33.497501 0 m
43.154499 63.945 l
54.6385 63.945 l
64.295502 0 l
55.1605 0 l
53.420502 13.05 l
44.372501 13.05 l
42.6325 0 l
33.497501 0 l
h
49.418499 43.152 m
49.157501 44.805 l
48.635502 44.805 l
48.3745 43.152 l
45.677502 22.968 l
52.115501 22.968 l
49.418499 43.152 l
h
97.9925 21.924 m
97.9925 13.137 l
97.905502 10.527 97.383499 8.1780005 96.426498 6.177 c
95.643501 4.4369998 94.425499 2.7839999 92.685501 1.479 c
90.945503 0.086999997 88.596504 -0.69599998 85.4645 -0.69599998 c
82.332497 -0.69599998 79.8965 0.086999997 78.156502 1.479 c
76.416504 2.7839999 75.2855 4.4369998 74.502502 6.177 c
73.545502 8.1780005 73.023499 10.527 72.936501 13.137 c
72.936501 50.807999 l
73.023499 53.331001 73.545502 55.68 74.502502 57.681 c
75.2855 59.421001 76.416504 61.160999 78.156502 62.466 c
79.8965 63.771 82.332497 64.640999 85.4645 64.640999 c
88.596504 64.640999 90.945503 63.771 92.685501 62.466 c
94.425499 61.160999 95.643501 59.421001 96.426498 57.681 c
97.383499 55.68 97.905502 53.331001 97.9925 50.807999 c
97.9925 42.021 l
89.205498 42.021 l
89.205498 50.807999 l
89.205498 52.548 88.7705 53.765999 87.813499 54.810001 c
87.378502 55.244999 86.595497 55.506001 85.638504 55.506001 c
83.985504 55.506001 83.202499 54.287998 82.767502 53.157001 c
82.5065 52.460999 82.419502 51.678001 82.332497 50.807999 c
82.332497 13.137 l
82.419502 11.31 82.941498 10.092 83.811501 9.1350002 c
84.246498 8.6999998 84.855499 8.4390001 85.638504 8.4390001 c
87.639503 8.4390001 88.422501 9.4829998 88.857498 10.788 c
89.1185 11.397 89.205498 12.18 89.205498 13.137 c
89.205498 21.924 l
97.9925 21.924 l
h
108.5475 63.945 m
130.0365 63.945 l
130.0365 54.287998 l
117.9435 54.287998 l
117.9435 37.497002 l
126.6435 37.497002 l
126.6435 27.231001 l
117.9435 27.231001 l
117.9435 9.6569996 l
130.0365 9.6569996 l
130.0365 0 l
108.5475 0 l
108.5475 63.945 l
h
W*
0 0 27 64 rc
-273.29651 69.643341 m
135.0365 69.643341 l
135.0365 -5.6960001 l
-273.29651 -5.6960001 l
h
f
ep
end
%%Trailer
%%EOF
