%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.11.1 (Build 15B42) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 2000 2287
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 2000 2287
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0 0 0 sc
q
717.28662 756.19 m
759.67914 756.19 l
759.67914 506.93768 l
815.81 506.93768 l
815.81 467.68536 l
717.28662 467.68536 l
717.28662 756.19 l
h
833.08099 756.19 m
875.47351 756.19 l
875.47351 467.68536 l
833.08099 467.68536 l
833.08099 756.19 l
h
906.87537 756.19 m
1003.8287 756.19 l
1003.8287 712.61993 l
949.26788 712.61993 l
949.26788 636.86292 l
988.52026 636.86292 l
988.52026 590.54517 l
949.26788 590.54517 l
949.26788 511.25546 l
1003.8287 511.25546 l
1003.8287 467.68536 l
906.87537 467.68536 l
906.87537 756.19 l
h
1095.2866 652.56384 m
1095.2866 696.91901 l
1095.2866 704.76947 1093.7166 710.26477 1089.7913 714.9751 c
1087.8286 716.93768 1084.6885 718.11523 1081.1558 718.11523 c
1073.6979 718.11523 1070.1652 712.61993 1068.595 707.51715 c
1067.4175 704.37695 1067.0249 700.84424 1067.0249 696.91901 c
1067.0249 523.42371 l
1067.0249 515.18066 1068.9875 509.68536 1072.9127 505.36761 c
1074.8754 503.405 1077.623 502.22742 1081.1558 502.22742 c
1088.6136 502.22742 1092.1464 506.93768 1093.7166 512.82556 c
1094.894 515.57318 1095.2866 519.1059 1095.2866 523.42371 c
1095.2866 575.62927 l
1078.4081 575.62927 l
1078.4081 611.34894 l
1137.6791 611.34894 l
1137.6791 467.68536 l
1112.5576 467.68536 l
1107.4548 481.42368 l
1099.6044 471.6106 1088.2212 464.54517 1074.4829 464.54517 c
1060.7445 464.54517 1051.324 468.07788 1044.2585 474.35825 c
1037.1931 480.24609 1032.4829 487.70404 1029.3427 495.5545 c
1025.8099 504.58255 1024.2399 515.18066 1024.6324 526.95636 c
1024.6324 696.91901 l
1025.0249 708.30219 1027.38 718.90033 1031.6979 727.92834 c
1035.2305 735.77881 1040.3334 743.62927 1048.1838 749.51715 c
1056.0343 755.40497 1067.0249 759.3302 1081.1558 759.3302 c
1095.2866 759.3302 1105.8848 755.40497 1113.7352 749.51715 c
1121.5857 743.62927 1127.0811 735.77881 1130.6136 727.92834 c
1134.9315 718.90033 1137.2866 708.30219 1137.6791 696.91901 c
1137.6791 652.56384 l
1095.2866 652.56384 l
h
1168.6885 756.19 m
1265.6417 756.19 l
1265.6417 712.61993 l
1211.0811 712.61993 l
1211.0811 636.86292 l
1250.3334 636.86292 l
1250.3334 590.54517 l
1211.0811 590.54517 l
1211.0811 511.25546 l
1265.6417 511.25546 l
1265.6417 467.68536 l
1168.6885 467.68536 l
1168.6885 756.19 l
h
108.15265 184.5701 m
64.713394 184.5701 l
64.713394 19.087227 l
8.8629284 19.087227 l
8.8629284 399.18069 l
64.713394 399.18069 l
64.713394 241.97197 l
108.15265 241.97197 l
108.15265 399.18069 l
164.00311 399.18069 l
164.00311 19.087227 l
108.15265 19.087227 l
108.15265 184.5701 l
h
189.85982 19.087227 m
247.26169 399.18069 l
315.52338 399.18069 l
372.92523 19.087227 l
318.62616 19.087227 l
308.28348 96.657318 l
254.50156 96.657318 l
244.15887 19.087227 l
189.85982 19.087227 l
h
284.49533 275.58566 m
282.94394 285.41122 l
279.84113 285.41122 l
278.28973 275.58566 l
262.25858 155.6106 l
300.52649 155.6106 l
284.49533 275.58566 l
h
544.09656 149.40498 m
544.09656 97.174454 l
543.57947 81.660439 540.47662 67.697823 534.78815 55.803738 c
530.13397 45.46106 522.8941 35.635513 512.55139 27.878504 c
502.20871 19.604361 488.24609 14.950156 469.62927 14.950156 c
451.01245 14.950156 436.53271 19.604361 426.19003 27.878504 c
415.84735 35.635513 409.1246 45.46106 404.4704 55.803738 c
398.78192 67.697823 395.67914 81.660439 395.16199 97.174454 c
395.16199 321.09344 l
395.67914 336.09033 398.78192 350.05295 404.4704 361.94705 c
409.1246 372.28973 415.84735 382.63239 426.19003 390.3894 c
436.53271 398.14642 451.01245 403.31775 469.62927 403.31775 c
488.24609 403.31775 502.20871 398.14642 512.55139 390.3894 c
522.8941 382.63239 530.13397 372.28973 534.78815 361.94705 c
540.47662 350.05295 543.57947 336.09033 544.09656 321.09344 c
544.09656 268.86292 l
491.86606 268.86292 l
491.86606 321.09344 l
491.86606 331.43613 489.28036 338.67603 483.59189 344.88162 c
481.00623 347.46729 476.35202 349.01868 470.66354 349.01868 c
460.83801 349.01868 456.18381 341.77881 453.59814 335.05606 c
452.04672 330.91901 451.5296 326.2648 451.01245 321.09344 c
451.01245 97.174454 l
451.5296 86.314644 454.63239 79.074768 459.80374 73.386292 c
462.3894 70.800621 466.00934 69.249222 470.66354 69.249222 c
482.55762 69.249222 487.21185 75.454826 489.79752 83.211838 c
491.34891 86.831779 491.86606 91.485985 491.86606 97.174454 c
491.86606 149.40498 l
544.09656 149.40498 l
h
633.56073 399.18069 m
633.56073 266.27725 l
635.62927 266.27725 l
638.21497 272.48288 l
684.75702 399.18069 l
739.05609 399.18069 l
687.8598 274.03427 l
745.77881 19.087227 l
691.47974 19.087227 l
652.6947 184.5701 l
651.14331 192.3271 l
649.59192 192.3271 l
646.48907 184.5701 l
633.56073 153.54205 l
633.56073 19.087227 l
577.71027 19.087227 l
577.71027 399.18069 l
633.56073 399.18069 l
h
771.6355 399.18069 m
899.36761 399.18069 l
899.36761 341.77881 l
827.48596 341.77881 l
827.48596 241.97197 l
879.1994 241.97197 l
879.1994 180.95015 l
827.48596 180.95015 l
827.48596 76.489098 l
899.36761 76.489098 l
899.36761 19.087227 l
771.6355 19.087227 l
771.6355 399.18069 l
h
1030.2025 19.087227 m
1001.243 179.39876 l
986.24609 179.39876 l
986.24609 19.087227 l
930.39563 19.087227 l
930.39563 399.18069 l
986.24609 399.18069 l
1052.9564 399.18069 1081.3988 361.4299 1081.3988 289.54828 c
1081.3988 251.7975 1071.5732 217.66667 1050.3707 203.18692 c
1086.053 19.087227 l
1030.2025 19.087227 l
h
986.24609 231.11215 m
994.00311 231.11215 1004.3458 232.14642 1012.6199 239.38629 c
1020.8941 246.62617 1027.6168 260.58878 1027.6168 287.47974 c
1027.6168 314.37073 1020.8941 328.85046 1012.6199 336.09033 c
1004.3458 343.33023 994.00311 343.84735 986.24609 343.84735 c
986.24609 231.11215 l
h
1209.6479 297.3053 m
1209.6479 309.71652 1209.1309 323.67914 1205.5109 334.53894 c
1201.891 344.88162 1196.2025 352.12149 1187.4113 352.12149 c
1172.9315 351.60437 1168.2772 336.60748 1168.2772 314.37073 c
1168.2772 301.44238 1173.9657 287.99689 1182.2399 273.51712 c
1190.514 259.03738 1201.3738 244.0405 1212.2336 228.00934 c
1225.162 208.8754 1238.0903 189.2243 1247.9159 170.09035 c
1257.7415 150.95639 1264.4642 131.3053 1264.4642 110.61993 c
1264.4642 85.280373 1260.3271 61.49221 1248.433 43.909657 c
1236.5389 26.327103 1217.405 14.950156 1186.894 14.950156 c
1151.2118 14.950156 1131.0436 28.395639 1119.6666 49.080997 c
1108.2897 69.766357 1105.7041 97.174454 1105.7041 125.61682 c
1160.5203 130.78816 l
1160.5203 114.75701 1161.0374 98.725853 1165.1744 86.831779 c
1168.7944 74.420563 1175 66.146416 1186.894 66.146416 c
1203.4424 66.146416 1209.6479 83.728973 1209.6479 108.03427 c
1209.6479 120.44548 1203.4424 134.92523 1195.1682 149.92212 c
1190.514 157.16199 1185.8599 164.91901 1180.6885 172.67601 c
1169.8286 188.19003 1157.9346 205.77258 1145.5233 224.90654 c
1133.1122 244.0405 1123.8037 263.69159 1118.1152 283.8598 c
1115.0125 293.68536 1113.4611 304.02805 1113.4611 314.37073 c
1113.4611 335.05606 1118.1152 357.29285 1130.0094 374.35825 c
1141.9034 390.90656 1160.0032 402.80063 1186.377 403.31775 c
1219.9906 403.8349 1239.6417 389.87228 1250.5016 369.70404 c
1261.3613 349.01868 1264.4642 323.67914 1264.4642 302.47662 c
1209.6479 297.3053 l
h
1294.4579 399.18069 m
1350.3085 399.18069 l
1374.6136 399.18069 1398.9189 392.97507 1417.5358 375.39252 c
1436.1526 357.80997 1448.5638 328.85046 1448.5638 285.41122 c
1448.5638 241.97197 1436.1526 213.5296 1417.5358 195.94704 c
1398.9189 178.36449 1374.6136 171.1246 1350.3085 171.1246 c
1350.3085 19.087227 l
1294.4579 19.087227 l
1294.4579 399.18069 l
h
1350.3085 228.00934 m
1367.3738 228.00934 1378.2336 231.11215 1384.4392 239.90343 c
1390.6449 248.17757 1392.1963 262.1402 1392.1963 283.34268 c
1392.1963 304.54517 1390.6449 319.54205 1384.4392 328.85046 c
1378.2336 338.15887 1367.3738 342.29596 1350.3085 342.29596 c
1350.3085 228.00934 l
h
1460.9751 19.087227 m
1518.377 399.18069 l
1586.6387 399.18069 l
1644.0405 19.087227 l
1589.7415 19.087227 l
1579.3988 96.657318 l
1525.6168 96.657318 l
1515.2742 19.087227 l
1460.9751 19.087227 l
h
1555.6106 275.58566 m
1554.0592 285.41122 l
1550.9564 285.41122 l
1549.405 275.58566 l
1533.3738 155.6106 l
1571.6417 155.6106 l
1555.6106 275.58566 l
h
1815.2118 149.40498 m
1815.2118 97.174454 l
1814.6947 81.660439 1811.5919 67.697823 1805.9034 55.803738 c
1801.2493 45.46106 1794.0094 35.635513 1783.6666 27.878504 c
1773.324 19.604361 1759.3613 14.950156 1740.7445 14.950156 c
1722.1277 14.950156 1707.6479 19.604361 1697.3053 27.878504 c
1686.9626 35.635513 1680.2399 45.46106 1675.5857 55.803738 c
1669.8972 67.697823 1666.7944 81.660439 1666.2772 97.174454 c
1666.2772 321.09344 l
1666.7944 336.09033 1669.8972 350.05295 1675.5857 361.94705 c
1680.2399 372.28973 1686.9626 382.63239 1697.3053 390.3894 c
1707.6479 398.14642 1722.1277 403.31775 1740.7445 403.31775 c
1759.3613 403.31775 1773.324 398.14642 1783.6666 390.3894 c
1794.0094 382.63239 1801.2493 372.28973 1805.9034 361.94705 c
1811.5919 350.05295 1814.6947 336.09033 1815.2118 321.09344 c
1815.2118 268.86292 l
1762.9813 268.86292 l
1762.9813 321.09344 l
1762.9813 331.43613 1760.3956 338.67603 1754.7072 344.88162 c
1752.1215 347.46729 1747.4673 349.01868 1741.7788 349.01868 c
1731.9532 349.01868 1727.2991 341.77881 1724.7134 335.05606 c
1723.162 330.91901 1722.6449 326.2648 1722.1277 321.09344 c
1722.1277 97.174454 l
1722.6449 86.314644 1725.7477 79.074768 1730.9189 73.386292 c
1733.5046 70.800621 1737.1246 69.249222 1741.7788 69.249222 c
1753.6729 69.249222 1758.3271 75.454826 1760.9127 83.211838 c
1762.4642 86.831779 1762.9813 91.485985 1762.9813 97.174454 c
1762.9813 149.40498 l
1815.2118 149.40498 l
h
1848.8256 399.18069 m
1976.5576 399.18069 l
1976.5576 341.77881 l
1904.676 341.77881 l
1904.676 241.97197 l
1956.3894 241.97197 l
1956.3894 180.95015 l
1904.676 180.95015 l
1904.676 76.489098 l
1976.5576 76.489098 l
1976.5576 19.087227 l
1848.8256 19.087227 l
1848.8256 399.18069 l
h
1848.8256 399.18069 m
W*
0 0.39563861 2000 2286.6042 rc
-22.289721 790.48285 m
2007.7103 790.48285 l
2007.7103 -16.202492 l
-22.289721 -16.202492 l
h
f
Q
q
987.53894 1750.9445 m
913.90338 1820.4309 857.07861 1874.1478 850.78253 1880.3685 c
831.7655 1899.3926 838.18372 1917.2277 843.88885 1930.7823 c
891.66913 2043.0243 837.70831 2144.0898 786.3623 2198.3083 c
733.35236 2254.6672 664.89099 2272.74 632.7998 2274.4045 c
600.94623 2276.0693 557.92023 2262.2769 527.73065 2232.0762 c
662.03845 2097.2429 l
638.50488 1966.2146 l
507.52509 1942.4346 l
373.21729 2077.2676 l
339.22433 2043.2622 328.52725 2002.5981 330.42896 1971.9219 c
332.33066 1941.0077 343.74088 1880.6063 406.25937 1818.0647 c
468.77786 1755.5231 589.29834 1717.4749 673.92413 1761.2302 c
686.04749 1767.4131 704.11365 1774.0715 724.31927 1754.334 c
731.52655 1747.2759 783.2132 1692.6215 850.25372 1621.4706 c
728.89856 1507.069 613.21265 1398.1083 613.21265 1398.1083 c
567.09631 1358.3955 570.42432 1284.915 612.97491 1242.1108 c
656.23865 1199.5444 729.21655 1196.9287 768.91455 1242.8242 c
768.91455 1242.8242 874.89563 1355.7589 987.53894 1475.5769 c
1100.1823 1355.7589 1206.1633 1242.8242 1206.1633 1242.8242 c
1245.8613 1196.9287 1318.8392 1199.5444 1362.1029 1242.1108 c
1404.6536 1284.915 1407.9816 1358.3955 1361.8652 1398.1083 c
1361.8652 1398.1083 1246.1793 1507.069 1124.8242 1621.4706 c
1191.8646 1692.6215 1243.5513 1747.2759 1250.7587 1754.334 c
1270.9642 1774.0715 1289.0304 1767.4131 1301.1538 1761.2302 c
1385.7795 1717.4749 1506.3 1755.5231 1568.8185 1818.0647 c
1631.337 1880.6063 1642.7472 1941.0077 1644.6489 1971.9219 c
1646.5507 2002.5981 1635.8535 2043.2622 1601.8606 2077.2676 c
1467.5529 1942.4346 l
1336.573 1966.2146 l
1313.0394 2097.2429 l
1447.3472 2232.0762 l
1417.1577 2262.2769 1374.1316 2276.0693 1342.2781 2274.4045 c
1310.1869 2272.74 1241.7256 2254.6672 1188.7156 2198.3083 c
1137.3696 2144.0898 1083.4087 2043.0243 1131.1891 1930.7823 c
1136.8942 1917.2277 1143.3124 1899.3926 1124.2954 1880.3685 c
1117.9993 1874.1478 1061.1744 1820.4309 987.53894 1750.9445 c
h
720.89655 1296.5673 m
705.92065 1281.8236 681.67395 1281.8236 666.93573 1296.5673 c
652.19757 1311.5487 652.19757 1335.8044 666.93573 1350.5481 c
681.91168 1365.2917 706.15839 1365.2917 720.89655 1350.5481 c
735.63477 1335.5667 735.63477 1311.3109 720.89655 1296.5673 c
h
1254.1813 1296.5673 m
1269.1572 1281.8236 1293.4039 1281.8236 1308.1421 1296.5673 c
1322.8804 1311.5487 1322.8804 1335.8044 1308.1421 1350.5481 c
1293.1663 1365.2917 1268.9196 1365.2917 1254.1813 1350.5481 c
1239.4431 1335.5667 1239.4431 1311.3109 1254.1813 1296.5673 c
h
1254.1813 1296.5673 m
W*
0 0.39563861 2000 2286.6042 rc
299.06543 2305.6917 m
1676.0125 2305.6917 l
1676.0125 1178.1378 l
299.06543 1178.1378 l
h
f
Q
q
843.85004 997.2804 m
852.05719 997.2804 l
855.29828 1004.8205 l
878.5047 1059.5857 l
878.5047 1062.7009 l
911.93323 913.66998 l
922.2356 865.64185 l
936.07349 912.77307 l
990.95282 1099.689 l
966.78943 1100.696 l
1005.1207 913.78015 l
1016.2314 859.60059 l
1029.4287 913.31 l
1075.3574 1100.226 l
1051.1885 1100.094 l
1099.2874 913.17804 l
1108.2505 878.3465 l
1122.7577 911.25726 l
1163.9541 1004.7152 l
1152.5518 997.2804 l
1389.4081 997.2804 l
1389.4081 1022.2025 l
1152.5518 1022.2025 l
1144.4266 1022.2025 l
1141.1493 1014.7676 l
1099.9529 921.30969 l
1123.4232 919.38892 l
1075.3243 1106.3048 l
1062.9774 1154.2855 l
1051.1553 1106.1729 l
1005.2266 919.25696 l
1029.5347 918.7868 l
991.20349 1105.7026 l
981.14508 1154.7507 l
967.0401 1106.7098 l
912.16077 919.79395 l
936.30103 918.89703 l
896.2063 1105.8129 l
888.00891 1144.0281 l
872.57416 1108.1204 l
832.40179 1014.6624 l
843.85004 1022.2025 l
601.24609 1022.2025 l
601.24609 997.2804 l
843.85004 997.2804 l
h
843.85004 997.2804 m
W
0 0.39563861 2000 2286.6042 rc
570.09344 1185.9033 m
1420.5608 1185.9033 l
1420.5608 828.44794 l
570.09344 828.44794 l
h
f
ep
end
%%Trailer
%%EOF
