%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.11.6 (Build 15G31) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 2467 2822
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 2467 2822
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0 0 0 sc
q
947.81622 1023.2773 m
990.20874 1023.2773 l
990.20874 774.0249 l
1046.3396 774.0249 l
1046.3396 734.77258 l
947.81622 734.77258 l
947.81622 1023.2773 l
h
1063.6106 1023.2773 m
1106.0032 1023.2773 l
1106.0032 734.77258 l
1063.6106 734.77258 l
1063.6106 1023.2773 l
h
1137.405 1023.2773 m
1234.3583 1023.2773 l
1234.3583 979.70715 l
1179.7975 979.70715 l
1179.7975 903.95013 l
1219.0498 903.95013 l
1219.0498 857.63239 l
1179.7975 857.63239 l
1179.7975 778.34265 l
1234.3583 778.34265 l
1234.3583 734.77258 l
1137.405 734.77258 l
1137.405 1023.2773 l
h
1325.8162 919.65106 m
1325.8162 964.00623 l
1325.8162 971.85669 1324.2461 977.35205 1320.3209 982.06232 c
1318.3583 984.0249 1315.218 985.20251 1311.6853 985.20251 c
1304.2274 985.20251 1300.6947 979.70715 1299.1246 974.60437 c
1297.947 971.46417 1297.5546 967.93146 1297.5546 964.00623 c
1297.5546 790.51093 l
1297.5546 782.26788 1299.5171 776.77258 1303.4424 772.45483 c
1305.405 770.49219 1308.1526 769.31464 1311.6853 769.31464 c
1319.1433 769.31464 1322.676 774.0249 1324.2461 779.91278 c
1325.4237 782.66046 1325.8162 786.19318 1325.8162 790.51093 c
1325.8162 842.71649 l
1308.9377 842.71649 l
1308.9377 878.43616 l
1368.2087 878.43616 l
1368.2087 734.77258 l
1343.0873 734.77258 l
1337.9844 748.51093 l
1330.1339 738.69781 1318.7507 731.63239 1305.0125 731.63239 c
1291.2742 731.63239 1281.8536 735.1651 1274.7882 741.4455 c
1267.7228 747.33331 1263.0125 754.79126 1259.8723 762.64172 c
1256.3396 771.6698 1254.7695 782.26788 1255.162 794.04364 c
1255.162 964.00623 l
1255.5546 975.3894 1257.9097 985.98755 1262.2274 995.01556 c
1265.7601 1002.866 1270.8629 1010.7165 1278.7134 1016.6044 c
1286.5638 1022.4922 1297.5546 1026.4175 1311.6853 1026.4175 c
1325.8162 1026.4175 1336.4143 1022.4922 1344.2648 1016.6044 c
1352.1152 1010.7165 1357.6106 1002.866 1361.1433 995.01556 c
1365.4611 985.98755 1367.8162 975.3894 1368.2087 964.00623 c
1368.2087 919.65106 l
1325.8162 919.65106 l
h
1399.218 1023.2773 m
1496.1714 1023.2773 l
1496.1714 979.70715 l
1441.6106 979.70715 l
1441.6106 903.95013 l
1480.8629 903.95013 l
1480.8629 857.63239 l
1441.6106 857.63239 l
1441.6106 778.34265 l
1496.1714 778.34265 l
1496.1714 734.77258 l
1399.218 734.77258 l
1399.218 1023.2773 l
h
338.68225 451.65732 m
295.24298 451.65732 l
295.24298 286.17447 l
239.39252 286.17447 l
239.39252 666.26788 l
295.24298 666.26788 l
295.24298 509.0592 l
338.68225 509.0592 l
338.68225 666.26788 l
394.53271 666.26788 l
394.53271 286.17447 l
338.68225 286.17447 l
338.68225 451.65732 l
h
420.3894 286.17447 m
477.79129 666.26788 l
546.05298 666.26788 l
603.45483 286.17447 l
549.15576 286.17447 l
538.81311 363.74454 l
485.03116 363.74454 l
474.68848 286.17447 l
420.3894 286.17447 l
h
515.0249 542.67291 m
513.47351 552.49841 l
510.37073 552.49841 l
508.81931 542.67291 l
492.78815 422.69781 l
531.05609 422.69781 l
515.0249 542.67291 l
h
774.62616 416.49222 m
774.62616 364.26169 l
774.10901 348.74765 771.00623 334.78503 765.31775 322.89096 c
760.66357 312.54828 753.42371 302.72275 743.08099 294.96573 c
732.73834 286.69159 718.7757 282.03738 700.15887 282.03738 c
681.54205 282.03738 667.06232 286.69159 656.7196 294.96573 c
646.37695 302.72275 639.65424 312.54828 635 322.89096 c
629.31152 334.78503 626.20874 348.74765 625.69159 364.26169 c
625.69159 588.18066 l
626.20874 603.17755 629.31152 617.1402 635 629.03424 c
639.65424 639.37695 646.37695 649.7196 656.7196 657.47662 c
667.06232 665.23364 681.54205 670.40497 700.15887 670.40497 c
718.7757 670.40497 732.73834 665.23364 743.08099 657.47662 c
753.42371 649.7196 760.66357 639.37695 765.31775 629.03424 c
771.00623 617.1402 774.10901 603.17755 774.62616 588.18066 c
774.62616 535.95013 l
722.39563 535.95013 l
722.39563 588.18066 l
722.39563 598.52338 719.81 605.76324 714.12152 611.96887 c
711.53583 614.5545 706.88159 616.1059 701.19318 616.1059 c
691.36761 616.1059 686.71338 608.86603 684.12775 602.14331 c
682.57629 598.00623 682.0592 593.35205 681.54205 588.18066 c
681.54205 364.26169 l
682.0592 353.40186 685.16199 346.16199 690.33331 340.47351 c
692.91901 337.88785 696.53894 336.33646 701.19318 336.33646 c
713.08722 336.33646 717.74146 342.54205 720.32709 350.29907 c
721.87848 353.91901 722.39563 358.57321 722.39563 364.26169 c
722.39563 416.49222 l
774.62616 416.49222 l
h
864.09033 666.26788 m
864.09033 533.3645 l
866.15887 533.3645 l
868.74457 539.57007 l
915.28662 666.26788 l
969.58569 666.26788 l
918.3894 541.12152 l
976.30841 286.17447 l
922.00934 286.17447 l
883.2243 451.65732 l
881.67291 459.41434 l
880.12152 459.41434 l
877.01868 451.65732 l
864.09033 420.62927 l
864.09033 286.17447 l
808.23987 286.17447 l
808.23987 666.26788 l
864.09033 666.26788 l
h
1002.1651 666.26788 m
1129.8972 666.26788 l
1129.8972 608.86603 l
1058.0156 608.86603 l
1058.0156 509.0592 l
1109.729 509.0592 l
1109.729 448.03738 l
1058.0156 448.03738 l
1058.0156 343.57632 l
1129.8972 343.57632 l
1129.8972 286.17447 l
1002.1651 286.17447 l
1002.1651 666.26788 l
h
1260.7321 286.17447 m
1231.7726 446.48599 l
1216.7758 446.48599 l
1216.7758 286.17447 l
1160.9253 286.17447 l
1160.9253 666.26788 l
1216.7758 666.26788 l
1283.486 666.26788 1311.9283 628.51715 1311.9283 556.6355 c
1311.9283 518.88477 1302.1028 484.75391 1280.9003 470.27414 c
1316.5825 286.17447 l
1260.7321 286.17447 l
h
1216.7758 498.19937 m
1224.5327 498.19937 1234.8754 499.23364 1243.1495 506.47351 c
1251.4237 513.71338 1258.1464 527.67603 1258.1464 554.56696 c
1258.1464 581.45795 1251.4237 595.93768 1243.1495 603.17755 c
1234.8754 610.41742 1224.5327 610.93457 1216.7758 610.93457 c
1216.7758 498.19937 l
h
1440.1776 564.39252 m
1440.1776 576.80371 1439.6604 590.76636 1436.0405 601.62616 c
1432.4205 611.96887 1426.7321 619.20874 1417.9408 619.20874 c
1403.4611 618.69159 1398.8069 603.6947 1398.8069 581.45795 c
1398.8069 568.5296 1404.4954 555.08411 1412.7695 540.60437 c
1421.0436 526.12463 1431.9034 511.12772 1442.7632 495.09659 c
1455.6915 475.96262 1468.62 456.31152 1478.4454 437.17758 c
1488.271 418.04361 1494.9938 398.39252 1494.9938 377.70715 c
1494.9938 352.36761 1490.8567 328.57944 1478.9626 310.99689 c
1467.0685 293.41434 1447.9346 282.03738 1417.4237 282.03738 c
1381.7415 282.03738 1361.5732 295.48288 1350.1963 316.16821 c
1338.8193 336.85358 1336.2336 364.26169 1336.2336 392.70404 c
1391.0498 397.8754 l
1391.0498 381.84424 1391.567 365.81308 1395.7041 353.91901 c
1399.324 341.50778 1405.5295 333.23364 1417.4237 333.23364 c
1433.9719 333.23364 1440.1776 350.81619 1440.1776 375.12149 c
1440.1776 387.53271 1433.9719 402.01245 1425.6979 417.00934 c
1421.0436 424.24921 1416.3894 432.00623 1411.218 439.76324 c
1400.3583 455.27725 1388.4642 472.8598 1376.053 491.99377 c
1363.6417 511.12772 1354.3334 530.77881 1348.6449 550.94702 c
1345.5421 560.77258 1343.9906 571.11523 1343.9906 581.45795 c
1343.9906 602.14331 1348.6449 624.38007 1360.5389 641.4455 c
1372.433 657.99377 1390.5327 669.88788 1416.9065 670.40497 c
1450.5203 670.92212 1470.1714 656.95947 1481.0311 636.79126 c
1491.891 616.1059 1494.9938 590.76636 1494.9938 569.56384 c
1440.1776 564.39252 l
h
1524.9875 666.26788 m
1580.838 666.26788 l
1605.1433 666.26788 1629.4486 660.06232 1648.0654 642.47974 c
1666.6823 624.89722 1679.0935 595.93768 1679.0935 552.49841 c
1679.0935 509.0592 1666.6823 480.61682 1648.0654 463.03427 c
1629.4486 445.45172 1605.1433 438.21185 1580.838 438.21185 c
1580.838 286.17447 l
1524.9875 286.17447 l
1524.9875 666.26788 l
h
1580.838 495.09659 m
1597.9034 495.09659 1608.7632 498.19937 1614.9689 506.99066 c
1621.1744 515.26477 1622.7258 529.22742 1622.7258 550.42993 c
1622.7258 571.63239 1621.1744 586.62927 1614.9689 595.93768 c
1608.7632 605.24609 1597.9034 609.38318 1580.838 609.38318 c
1580.838 495.09659 l
h
1691.5046 286.17447 m
1748.9065 666.26788 l
1817.1682 666.26788 l
1874.5701 286.17447 l
1820.271 286.17447 l
1809.9283 363.74454 l
1756.1464 363.74454 l
1745.8037 286.17447 l
1691.5046 286.17447 l
h
1786.1401 542.67291 m
1784.5887 552.49841 l
1781.486 552.49841 l
1779.9346 542.67291 l
1763.9034 422.69781 l
1802.1714 422.69781 l
1786.1401 542.67291 l
h
2045.7415 416.49222 m
2045.7415 364.26169 l
2045.2242 348.74765 2042.1215 334.78503 2036.433 322.89096 c
2031.7788 312.54828 2024.5389 302.72275 2014.1963 294.96573 c
2003.8536 286.69159 1989.891 282.03738 1971.2742 282.03738 c
1952.6573 282.03738 1938.1776 286.69159 1927.8348 294.96573 c
1917.4922 302.72275 1910.7695 312.54828 1906.1152 322.89096 c
1900.4268 334.78503 1897.324 348.74765 1896.8069 364.26169 c
1896.8069 588.18066 l
1897.324 603.17755 1900.4268 617.1402 1906.1152 629.03424 c
1910.7695 639.37695 1917.4922 649.7196 1927.8348 657.47662 c
1938.1776 665.23364 1952.6573 670.40497 1971.2742 670.40497 c
1989.891 670.40497 2003.8536 665.23364 2014.1963 657.47662 c
2024.5389 649.7196 2031.7788 639.37695 2036.433 629.03424 c
2042.1215 617.1402 2045.2242 603.17755 2045.7415 588.18066 c
2045.7415 535.95013 l
1993.5109 535.95013 l
1993.5109 588.18066 l
1993.5109 598.52338 1990.9253 605.76324 1985.2368 611.96887 c
1982.6511 614.5545 1977.9968 616.1059 1972.3085 616.1059 c
1962.4829 616.1059 1957.8286 608.86603 1955.243 602.14331 c
1953.6915 598.00623 1953.1744 593.35205 1952.6573 588.18066 c
1952.6573 364.26169 l
1953.1744 353.40186 1956.2772 346.16199 1961.4486 340.47351 c
1964.0343 337.88785 1967.6542 336.33646 1972.3085 336.33646 c
1984.2025 336.33646 1988.8567 342.54205 1991.4424 350.29907 c
1992.9938 353.91901 1993.5109 358.57321 1993.5109 364.26169 c
1993.5109 416.49222 l
2045.7415 416.49222 l
h
2079.3552 666.26788 m
2207.0872 666.26788 l
2207.0872 608.86603 l
2135.2056 608.86603 l
2135.2056 509.0592 l
2186.9189 509.0592 l
2186.9189 448.03738 l
2135.2056 448.03738 l
2135.2056 343.57632 l
2207.0872 343.57632 l
2207.0872 286.17447 l
2079.3552 286.17447 l
2079.3552 666.26788 l
h
W*
0 0 2467 2822 rc
208.23987 1057.5701 m
2238.24 1057.5701 l
2238.24 250.88474 l
208.23987 250.88474 l
h
f
Q
q
1218.0685 2018.0317 m
1144.433 2087.5181 1087.6082 2141.2351 1081.3121 2147.4558 c
1062.295 2166.4797 1068.7134 2184.3149 1074.4185 2197.8696 c
1122.1987 2310.1116 1068.2379 2411.177 1016.8919 2465.3955 c
963.88196 2521.7544 895.42059 2539.8271 863.32935 2541.4919 c
831.47583 2543.1565 788.44983 2529.364 758.26025 2499.1633 c
892.56805 2364.3301 l
869.03448 2233.3018 l
738.05469 2209.5217 l
603.74689 2344.355 l
569.75397 2310.3494 559.05688 2269.6853 560.95856 2239.009 c
562.86029 2208.095 574.27051 2147.6936 636.789 2085.1519 c
699.3075 2022.6102 819.82794 1984.5621 904.45374 2028.3175 c
916.57709 2034.5004 934.64325 2041.1587 954.84882 2021.4213 c
962.05615 2014.363 1013.7428 1959.7086 1080.7833 1888.5579 c
959.42816 1774.1561 843.74225 1665.1954 843.74225 1665.1954 c
797.62592 1625.4827 800.95392 1552.0022 843.50452 1509.1981 c
886.76825 1466.6317 959.74609 1464.0159 999.44415 1509.9115 c
999.44415 1509.9115 1105.4252 1622.8462 1218.0685 1742.6642 c
1330.7118 1622.8462 1436.6929 1509.9115 1436.6929 1509.9115 c
1476.391 1464.0159 1549.3688 1466.6317 1592.6326 1509.1981 c
1635.1832 1552.0022 1638.5111 1625.4827 1592.3949 1665.1954 c
1592.3949 1665.1954 1476.7089 1774.1561 1355.3538 1888.5579 c
1422.3943 1959.7086 1474.0809 2014.363 1481.2882 2021.4213 c
1501.4938 2041.1587 1519.5601 2034.5004 1531.6833 2028.3175 c
1616.3092 1984.5621 1736.8296 2022.6102 1799.3481 2085.1519 c
1861.8666 2147.6936 1873.2769 2208.095 1875.1785 2239.009 c
1877.0802 2269.6853 1866.3832 2310.3494 1832.3901 2344.355 c
1698.0824 2209.5217 l
1567.1025 2233.3018 l
1543.569 2364.3301 l
1677.8768 2499.1633 l
1647.6873 2529.364 1604.6613 2543.1565 1572.8077 2541.4919 c
1540.7164 2539.8271 1472.2551 2521.7544 1419.2451 2465.3955 c
1367.8992 2411.177 1313.9384 2310.1116 1361.7186 2197.8696 c
1367.4237 2184.3149 1373.842 2166.4797 1354.825 2147.4558 c
1348.5288 2141.2351 1291.7041 2087.5181 1218.0685 2018.0317 c
h
951.42615 1563.6545 m
936.45026 1548.9109 912.20355 1548.9109 897.46533 1563.6545 c
882.72711 1578.636 882.72711 1602.8916 897.46533 1617.6353 c
912.44122 1632.3789 936.68799 1632.3789 951.42615 1617.6353 c
966.16437 1602.6538 966.16437 1578.3982 951.42615 1563.6545 c
h
1484.7109 1563.6545 m
1499.6868 1548.9109 1523.9335 1548.9109 1538.6718 1563.6545 c
1553.4099 1578.636 1553.4099 1602.8916 1538.6718 1617.6353 c
1523.6958 1632.3789 1499.4491 1632.3789 1484.7109 1617.6353 c
1469.9727 1602.6538 1469.9727 1578.3982 1484.7109 1563.6545 c
h
W*
0 0 2467 2822 rc
529.59503 2572.7788 m
1906.5421 2572.7788 l
1906.5421 1445.2251 l
529.59503 1445.2251 l
h
f
Q
q
1085.702 1262.6605 m
1112.1495 1331.1963 l
1155.8805 1131.022 l
1208.7228 1315.62 l
1249.2212 1131.022 l
1296.6223 1315.62 l
1342.6791 1131.022 l
1395.6387 1262.6605 l
1623.053 1262.6605 l
1623.053 1287.5826 l
1378.0714 1287.5826 l
1348.9097 1219.0468 l
1296.6223 1419.6656 l
1252.3364 1234.6232 l
1214.7899 1420.1309 l
1161.9938 1231.5078 l
1121.4954 1420.1309 l
1066.0466 1287.5826 l
834.89099 1287.5826 l
834.89099 1262.6605 l
1085.702 1262.6605 l
h
W
0 0 2467 2822 rc
803.73834 1451.2834 m
1654.2056 1451.2834 l
1654.2056 1099.8694 l
803.73834 1099.8694 l
h
f
ep
end
%%Trailer
%%EOF
